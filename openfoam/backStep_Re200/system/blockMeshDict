/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Use structure from backwardFacingStep2D example, adjust vertices
scale   1.0; // Set scale to 1, coordinates defined directly

vertices
(
    // Inlet channel
    ( -5   0   0)   // 0
    (  0   0   0)   // 1
    (  0   1   0)   // 2
    ( -5   1   0)   // 3
    ( -5   0   0.1) // 4
    (  0   0   0.1) // 5
    (  0   1   0.1) // 6
    ( -5   1   0.1) // 7

    // Lower outlet (below step)
    (  0  -1   0)   // 8
    ( 15  -1   0)   // 9
    ( 15   0   0)   // 10
    (  0  -1   0.1) // 11
    ( 15  -1   0.1) // 12
    ( 15   0   0.1) // 13

    // Upper outlet (same height as inlet)
    ( 15   1   0)   // 14
    ( 15   1   0.1) // 15
);

// Block definitions and cell counts follow example structure but use our coords
// Adapt cell counts if needed, using 50x40 and 150x40/40 for consistency

blocks
(
    // Inlet channel (y=0 to y=1)
    hex (0 1 2 3 4 5 6 7)
    (50 40 1)
    simpleGrading (1 1 1)
    
    // Lower outlet section (y=-1 to y=0, below the step)
    hex (8 9 10 1 11 12 13 5)
    (150 40 1)
    simpleGrading (1.5 1 1)
    
    // Upper outlet section (y=0 to y=1, same height as inlet)
    hex (1 10 14 2 5 13 15 6)
    (150 40 1)
    simpleGrading (1.5 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (9 12 13 10)  // Lower outlet
            (10 13 15 14) // Upper outlet
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (0 1 5 4)    // Bottom wall of inlet
            (8 9 12 11)  // Bottom wall of lower outlet
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (3 7 6 2)     // Top wall of inlet
            (2 6 15 14)   // Top wall of upper outlet
        );
    }
    backStep
    {
        type wall;
        faces
        (
            (8 11 5 1)   // Only keep the horizontal wall under the step
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            // Front faces (z=0)
            (0 1 2 3)      // Inlet section
            (8 9 10 1)     // Lower outlet section
            (1 10 14 2)    // Upper outlet section
            
            // Back faces (z=0.1)
            (4 5 6 7)      // Inlet section
            (11 12 13 5)   // Lower outlet section
            (5 13 15 6)    // Upper outlet section
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* // 